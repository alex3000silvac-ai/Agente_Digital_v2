"""
Script para insertar datos completos de prueba en incidente 5
Incluye archivos, taxonom√≠as seleccionadas con justificaciones
"""

from app.database import get_db_connection
from datetime import datetime
import os

INCIDENTE_ID = 5
UPLOAD_FOLDER = "C:/Pasc/Proyecto_Derecho_Digital/Desarrollos/AgenteDigital_Flask/agente_digital_api/uploads"

def insertar_datos_prueba():
    conn = get_db_connection()
    cursor = conn.cursor()
    
    try:
        print("=" * 70)
        print("INSERTANDO DATOS COMPLETOS DE PRUEBA")
        print("=" * 70)
        
        # 1. Verificar que el incidente existe
        cursor.execute("SELECT IncidenteID, EmpresaID FROM Incidentes WHERE IncidenteID = ?", (INCIDENTE_ID,))
        result = cursor.fetchone()
        if not result:
            print(f"‚ùå Incidente {INCIDENTE_ID} no encontrado")
            return
        
        empresa_id = result[1]
        print(f"‚úÖ Incidente {INCIDENTE_ID} encontrado (Empresa ID: {empresa_id})")
        
        # 2. Limpiar datos anteriores
        print("\nüßπ Limpiando datos anteriores...")
        
        # Limpiar archivos
        cursor.execute("DELETE FROM INCIDENTES_ARCHIVOS WHERE IncidenteID = ?", (INCIDENTE_ID,))
        print("   - Archivos eliminados")
        
        # Limpiar taxonom√≠as
        cursor.execute("DELETE FROM INCIDENTE_TAXONOMIA WHERE IncidenteID = ?", (INCIDENTE_ID,))
        print("   - Taxonom√≠as eliminadas")
        
        # 3. Insertar archivos de prueba
        print("\nüìé Insertando archivos de prueba...")
        
        incidente_dir = os.path.join(UPLOAD_FOLDER, 'incidentes', str(INCIDENTE_ID))
        os.makedirs(incidente_dir, exist_ok=True)
        
        archivos_data = [
            # Secci√≥n 2
            (2, 'analisis_inicial.pdf', 'application/pdf', 256.8, 'An√°lisis inicial del incidente', 'Documento con el primer an√°lisis realizado'),
            (2, 'evidencia_logs.txt', 'text/plain', 45.2, 'Logs del sistema', 'Logs capturados durante el incidente'),
            
            # Secci√≥n 3
            (3, 'diagrama_red.png', 'image/png', 189.5, 'Diagrama de red afectada', 'Muestra los sistemas comprometidos'),
            (3, 'reporte_vulnerabilidad.docx', 'application/msword', 78.3, 'Reporte de vulnerabilidad', 'An√°lisis de la vulnerabilidad explotada'),
            
            # Secci√≥n 5
            (5, 'plan_accion.xlsx', 'application/vnd.ms-excel', 34.7, 'Plan de acci√≥n', 'Acciones inmediatas tomadas'),
            
            # Secci√≥n 6
            (6, 'lecciones_aprendidas.pdf', 'application/pdf', 156.2, 'Documento de lecciones', 'Resumen de mejoras identificadas'),
            (6, 'mejoras_propuestas.docx', 'application/msword', 89.4, 'Propuestas de mejora', 'Cambios sugeridos para evitar recurrencia')
        ]
        
        for seccion, nombre, tipo, tama√±o, desc, comentario in archivos_data:
            archivo_path = os.path.join(incidente_dir, nombre)
            
            # Crear archivo f√≠sico
            with open(archivo_path, 'w') as f:
                f.write(f"Archivo de prueba: {nombre}\n")
                f.write(f"Secci√≥n: {seccion}\n")
                f.write(f"Descripci√≥n: {desc}\n")
            
            # Insertar en BD
            cursor.execute("""
                INSERT INTO INCIDENTES_ARCHIVOS 
                (IncidenteID, NombreArchivo, TipoArchivo, TamanoKB, RutaArchivo,
                 SeccionID, Descripcion, Comentario, FechaCarga, SubidoPor, Activo)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, GETDATE(), 'sistema_prueba', 1)
            """, (INCIDENTE_ID, nombre, tipo, tama√±o, archivo_path, seccion, desc, comentario))
            
            print(f"   ‚úÖ {nombre} (Secci√≥n {seccion})")
        
        # 4. Insertar taxonom√≠as seleccionadas con justificaciones
        print("\nüè∑Ô∏è Insertando taxonom√≠as seleccionadas...")
        
        taxonomias_data = [
            ('INC_CONF_EXCF_FCRA', 
             'Se detect√≥ una filtraci√≥n de configuraciones cr√≠ticas en las rutas de la aplicaci√≥n principal. Los archivos de configuraci√≥n conten√≠an credenciales y claves API que quedaron expuestas.',
             'El problema se origin√≥ por permisos incorrectos en el directorio de configuraci√≥n. La aplicaci√≥n web ten√≠a acceso de lectura a archivos que deber√≠an estar protegidos.'),
            
            ('INC_DISP_DENE_DDOS',
             'El servicio sufri√≥ una denegaci√≥n distribuida que afect√≥ la disponibilidad durante 3 horas. Se identificaron m√∫ltiples IPs de origen atacando simult√°neamente.',
             'La infraestructura no contaba con protecci√≥n DDoS adecuada. Los l√≠mites de rate limiting eran insuficientes para el volumen de tr√°fico malicioso.'),
            
            ('INC_CONF_ACCN_CIAU',
             'Se comprometieron credenciales de usuario administrador mediante un ataque de phishing dirigido. El atacante obtuvo acceso privilegiado al sistema.',
             'El usuario administrador cay√≥ en un correo de phishing muy elaborado. No se ten√≠a implementada autenticaci√≥n de dos factores para cuentas privilegiadas.')
        ]
        
        for tax_id, justificacion, descripcion in taxonomias_data:
            cursor.execute("""
                INSERT INTO INCIDENTE_TAXONOMIA
                (IncidenteID, TaxonomiaID, Justificacion, DescripcionProblema,
                 FechaAsignacion, AsignadoPor)
                VALUES (?, ?, ?, ?, GETDATE(), 'sistema_prueba')
            """, (INCIDENTE_ID, tax_id, justificacion, descripcion))
            
            print(f"   ‚úÖ {tax_id}")
            print(f"      - Justificaci√≥n: {justificacion[:60]}...")
            print(f"      - Descripci√≥n: {descripcion[:60]}...")
        
        # 5. Actualizar algunos campos del incidente para completitud
        print("\nüìù Actualizando campos del incidente...")
        
        cursor.execute("""
            UPDATE Incidentes
            SET AccionesInmediatas = 'Se aplicaron medidas de contenci√≥n inmediatas: 
1. Aislamiento de sistemas comprometidos
2. Cambio de credenciales afectadas
3. Aplicaci√≥n de parches de seguridad
4. Monitoreo intensivo de logs',
                MedidasContencion = 'Bloqueo de IPs maliciosas, actualizaci√≥n de reglas de firewall, implementaci√≥n de rate limiting',
                CausaRaiz = 'Configuraci√≥n inadecuada de permisos y falta de segmentaci√≥n de red apropiada',
                LeccionesAprendidas = 'Necesidad de implementar: 1) Revisi√≥n peri√≥dica de permisos, 2) MFA obligatorio, 3) Segmentaci√≥n de red mejorada',
                SolucionImplementada = 'Se implement√≥ nueva arquitectura de seguridad con segmentaci√≥n de red y pol√≠ticas de acceso mejoradas'
            WHERE IncidenteID = ?
        """, (INCIDENTE_ID,))
        
        # Confirmar cambios
        conn.commit()
        
        # 6. Verificar inserci√≥n
        print("\nüìä Verificaci√≥n de datos insertados:")
        
        # Contar archivos
        cursor.execute("""
            SELECT COUNT(*) as total, SeccionID 
            FROM INCIDENTES_ARCHIVOS 
            WHERE IncidenteID = ? AND Activo = 1
            GROUP BY SeccionID
            ORDER BY SeccionID
        """, (INCIDENTE_ID,))
        
        print("\n   Archivos por secci√≥n:")
        for row in cursor.fetchall():
            print(f"   - Secci√≥n {row.SeccionID}: {row.total} archivos")
        
        # Contar taxonom√≠as
        cursor.execute("""
            SELECT COUNT(*) FROM INCIDENTE_TAXONOMIA WHERE IncidenteID = ?
        """, (INCIDENTE_ID,))
        
        total_tax = cursor.fetchone()[0]
        print(f"\n   Taxonom√≠as seleccionadas: {total_tax}")
        
        print("\n‚úÖ DATOS DE PRUEBA INSERTADOS EXITOSAMENTE")
        print("=" * 70)
        
    except Exception as e:
        print(f"\n‚ùå Error: {e}")
        if conn:
            conn.rollback()
    finally:
        if conn:
            conn.close()

if __name__ == "__main__":
    insertar_datos_prueba()