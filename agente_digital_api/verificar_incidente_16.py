#!/usr/bin/env python3
"""
Script para verificar si el incidente 16 realmente existe en la BD
"""

import sys
import os

# Agregar el path del proyecto
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database import get_db_connection

def verificar_incidente(incidente_id):
    """Verifica si un incidente existe en la BD"""
    conn = None
    try:
        conn = get_db_connection()
        if not conn:
            print("‚ùå Error: No se pudo conectar a la base de datos")
            return False
            
        cursor = conn.cursor()
        
        # Verificar que el incidente existe
        cursor.execute("SELECT IncidenteID, Titulo, EstadoActual FROM Incidentes WHERE IncidenteID = ?", (incidente_id,))
        incidente = cursor.fetchone()
        
        if incidente:
            print(f"‚úÖ INCIDENTE {incidente_id} S√ç EXISTE EN LA BD:")
            print(f"   - ID: {incidente[0]}")
            print(f"   - T√≠tulo: {incidente[1]}")  
            print(f"   - Estado: {incidente[2]}")
            return True
        else:
            print(f"‚ùå INCIDENTE {incidente_id} NO EXISTE EN LA BD")
            return False
            
    except Exception as e:
        print(f"‚ùå Error verificando incidente: {e}")
        return False
        
    finally:
        if conn:
            conn.close()

def main():
    """Funci√≥n principal"""
    incidente_id = 16
    
    print(f"üîç VERIFICANDO EXISTENCIA DEL INCIDENTE {incidente_id}")
    print("=" * 50)
    
    if verificar_incidente(incidente_id):
        print(f"\nüí° CONCLUSI√ìN: El incidente {incidente_id} TODAV√çA existe en la BD")
        print("   Esto explica por qu√© sigue apareciendo en el frontend")
    else:
        print(f"\nüí° CONCLUSI√ìN: El incidente {incidente_id} NO existe en la BD")
        print("   El problema est√° en el cach√© del frontend")

if __name__ == "__main__":
    main()