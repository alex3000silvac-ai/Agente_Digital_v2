===============================================================================
INSTRUCCIONES PARA DEPURAR EN EL NAVEGADOR
===============================================================================

1. ABRIR LA P√ÅGINA DEL INCIDENTE
   - URL: http://localhost:8080/incidente/5
   - Abrir consola del navegador (F12)

2. VERIFICAR TOKEN JWT
   En la consola, ejecutar:
   
   console.log('Token actual:', localStorage.getItem('token'))
   
   Si no hay token o est√° expirado, generar uno nuevo:
   
   // Token de prueba v√°lido por 24 horas
   localStorage.setItem('token', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwibm9tYnJlIjoiQWRtaW5pc3RyYWRvciIsInJvbCI6IkFkbWluaXN0cmFkb3IiLCJleHAiOjE3NjA5ODg2NjV9.YOUR_SIGNATURE_HERE')

3. PROBAR CONEXI√ìN DIRECTA AL BACKEND
   En la consola, ejecutar:
   
   fetch('http://localhost:5000/api/admin/incidentes/5', {
     headers: {
       'Authorization': 'Bearer ' + localStorage.getItem('token')
     }
   })
   .then(response => {
     console.log('Status:', response.status)
     return response.json()
   })
   .then(data => {
     console.log('=== DATOS RECIBIDOS ===')
     console.log('Incidente ID:', data.IncidenteID)
     console.log('T√≠tulo:', data.Titulo)
     
     // Verificar archivos
     if (data.archivos) {
       console.log('\nARCHIVOS:')
       Object.entries(data.archivos).forEach(([seccion, archivos]) => {
         if (Array.isArray(archivos) && archivos.length > 0) {
           console.log(`  ${seccion}: ${archivos.length} archivos`)
           archivos.forEach(a => console.log(`    - ${a.nombre}`))
         }
       })
     }
     
     // Verificar taxonom√≠as
     if (data.taxonomias_seleccionadas) {
       console.log('\nTAXONOM√çAS:', data.taxonomias_seleccionadas.length)
       data.taxonomias_seleccionadas.forEach(t => 
         console.log(`  - ${t.id}: ${t.justificacion?.substring(0, 50)}...`)
       )
     }
     
     // Guardar en variable global para inspecci√≥n
     window.debugData = data
     console.log('\n‚úÖ Datos guardados en window.debugData')
   })
   .catch(error => {
     console.error('‚ùå ERROR:', error)
   })

4. SI LA LLAMADA FUNCIONA PERO NO SE VEN DATOS EN LA P√ÅGINA:
   
   a) Verificar el componente Vue:
   
   const comp = document.querySelector('.acordeon-incidente-mejorado').__vueParentComponent
   console.log('Modo:', comp.props.modo)
   console.log('IncidenteId:', comp.props.incidenteId)
   console.log('Archivos Secci√≥n 2:', comp.ctx.archivosSeccion2)
   console.log('Taxonom√≠as:', comp.ctx.taxonomiasSeleccionadas)
   
   b) Forzar recarga de datos:
   
   comp.ctx.cargarIncidenteExistente()

5. VERIFICAR LOGS EN LA CONSOLA:
   Buscar estos mensajes:
   - "üöÄ Acorde√≥n montado con props:"
   - "üì• Modo edici√≥n: cargando datos completos del servidor..."
   - "‚ö†Ô∏è No hay formData, mapeando campos directamente"
   - "‚úÖ Archivos restaurados:"

6. SI NO HAY LOGS DE CARGA:
   El componente no est√° detectando el modo 'editar'. Verificar:
   
   // Ver todas las props
   const vista = document.querySelector('#app').__vue__
   console.log('Props del componente:', vista.$children[0].$children)

7. VERIFICAR EN NETWORK TAB:
   - Buscar petici√≥n a: /api/admin/incidentes/5
   - Verificar Headers ‚Üí Authorization tiene el token
   - Verificar Response tiene los datos

===============================================================================
SOLUCIONES R√ÅPIDAS:
===============================================================================

A) Si el token est√° expirado:
   - Cerrar sesi√≥n y volver a iniciar sesi√≥n
   - O generar un token nuevo con el script

B) Si no se cargan los datos:
   - Recargar la p√°gina con Ctrl+F5
   - Verificar que la URL sea /incidente/5 (no /incidentes/5)

C) Si aparece error 401:
   - El token es inv√°lido o la clave secreta no coincide
   - Revisar config.py del servidor

D) Si aparece error CORS:
   - Verificar que Flask-CORS est√© configurado
   - Agregar el origen http://localhost:8080

===============================================================================