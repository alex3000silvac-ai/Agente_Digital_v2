#!/usr/bin/env python3
"""
Script para verificar el estado del servidor y endpoints
"""

import requests
import json

def verificar_servidor():
    """Verifica si el servidor est√° corriendo y los endpoints responden"""
    
    base_url = "http://localhost:5000"
    
    print("üîç VERIFICANDO SERVIDOR FLASK")
    print("=" * 60)
    
    # 1. Verificar si el servidor responde
    print("\n1Ô∏è‚É£ VERIFICANDO CONEXI√ìN AL SERVIDOR...")
    try:
        response = requests.get(f"{base_url}/api/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Servidor respondiendo correctamente")
        else:
            print(f"‚ö†Ô∏è Servidor responde pero con c√≥digo: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ùå ERROR: El servidor NO est√° corriendo")
        print("üí° Ejecuta: python run.py")
        return False
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
        return False
    
    # 2. Verificar endpoint de empresas
    print("\n2Ô∏è‚É£ VERIFICANDO ENDPOINT DE EMPRESAS...")
    try:
        response = requests.get(f"{base_url}/api/admin/empresas/3")
        if response.status_code == 200:
            print("‚úÖ Endpoint de empresas funcionando")
        else:
            print(f"‚ö†Ô∏è Endpoint de empresas responde con: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error en endpoint de empresas: {e}")
    
    # 3. Verificar endpoint de taxonom√≠as
    print("\n3Ô∏è‚É£ VERIFICANDO ENDPOINT DE TAXONOM√çAS...")
    try:
        response = requests.get(f"{base_url}/api/admin/taxonomias/flat?tipo_empresa=PSE")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Endpoint de taxonom√≠as funcionando")
            print(f"   - Taxonom√≠as cargadas: {data.get('total', 0)}")
        else:
            print(f"‚ö†Ô∏è Endpoint de taxonom√≠as responde con: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error en endpoint de taxonom√≠as: {e}")
    
    print("\n‚úÖ VERIFICACI√ìN COMPLETADA")
    return True

if __name__ == "__main__":
    verificar_servidor()